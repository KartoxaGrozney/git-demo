В ходе подготовки к практической части летней практики было выяснено,
что разработка приложения, отражающего табличные данные с возможностью корректировки,
является интересной и полезной задачей. Ниже описаны основные шаги и компоненты такого проекта:
1. Используя библиотеку Qt's QAxObject, можно взаимодействовать с Excel напрямую из вашего Qt-приложения.
Это позволяет открывать, читать, редактировать и сохранять Excel-файлы.
2. Для отображения табличных данных в вашем Qt-приложении, вы можете использовать виджет QTableView.
Он позволяет отображать данные из QStandardItemModel или другой модели, реализующей интерфейс QAbstractItemModel.
3. При открытии Excel-файла, можно загружать данные из таблицы в QStandardItemModel,
а затем связывать эту модель с QTableView для отображения. Любые изменения,
внесенные пользователем в таблицу, должны обновляться в QStandardItemModel.
4. Предоставьте пользователю возможность редактировать данные прямо в QTableView.
Изменения должны отражаться как в QStandardItemModel, так и в открытом Excel-файле.
5. Реализуйте функциональность для сохранения изменений, внесенных пользователем, обратно в Excel-файл.
Это может включать в себя операции закрытия, сохранения и повторного открытия файла.
8. Разработайте интуитивно понятный и эффективный интерфейс пользователя,
который позволит легко взаимодействовать с таблицами и Excel-файлами. 
Это лишь общие рекомендации, и реальная реализация проекта может отличаться в зависимости
от требований и целей проекта. Важно тщательно спроектировать и протестировать приложение,
чтобы обеспечить надежную и эффективную работу с Excel-файлами.

Во время выполнения практических заданий было спроектировано диалоговое окно,
которое запрашивает у пользователя количество столбцов и строк,
и при нажатии на кнопку “Download from excel” заполняет ее данными с исходной таблицы EXEL. 
Фото1.
После выполнения пользователем всех необходимых действий, диалоговое окно принимает следующий вид:
Фото2.
Программа корректно считала данный из исходной таблицы EXEL,
а также корректно редактирует полученные данные и записывает их обратно.
Благодаря данной работе, были получены новые знания юля работы с базами данных,
а также закреплены знания полученные ранее. 
